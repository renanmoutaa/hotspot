version: "3.9"

services:
  # Nginx apenas, com configuração via conf.d
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - NestJS
      - FastAPI
      - Frontend

  # PostgreSQL 17.6
  postgres:
    image: postgres:17.6
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hotspot}
      POSTGRES_USER: ${POSTGRES_USER:-hotspot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hotspotpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      - "5433:5432"
    restart: unless-stopped

  # Redis latest
  redis:
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
  
  # Frontend (Vite dev server)
  Frontend:
    container_name: Frontend
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: sh -c "npm ci && npm run dev -- --host"
    ports:
      - "5173:5173"
    restart: unless-stopped

  # NestJS Backend
  NestJS:
    container_name: NestJS
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./BACKEND/NestJS:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm ci && npm run dev"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
 
  # FastAPI Backend
  FastAPI:
    container_name: FastAPI
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./BACKEND/FastAPI:/app
    ports:
      - "3001:3001"
    command: sh -c "pip install --no-cache-dir -r requirements.txt && python -m uvicorn main:app --host 0.0.0.0 --port 3001 --reload"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  # UniFi Network Application (Controller)
  unifi:
    container_name: UniFi
    image: jacobalberty/unifi:latest
    environment:
      TZ: ${TZ:-UTC}
    volumes:
      - unifi_data:/unifi
    ports:
      - "8443:8443"   # Web UI (HTTPS)
      - "8080:8080"   # Device inform
      - "3478:3478/udp" # STUN
      - "10001:10001/udp" # Discovery
      - "8880:8880"   # Portal HTTP
      - "8843:8843"   # Portal HTTPS
      - "6789:6789"   # Speedtest
    restart: unless-stopped

  # FreeRADIUS server
  freeradius:
    container_name: FreeRADIUS
    image: freeradius/freeradius-server:latest
    environment:
      TZ: ${TZ:-UTC}
    ports:
      - "1812:1812/udp"  # RADIUS auth
      - "1813:1813/udp"  # RADIUS acct
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  unifi_data:
