services:
  # Controladora Unifi
  unifi-controller:
    image: lscr.io/linuxserver/unifi-controller:latest
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - MEM_LIMIT=512M
      - MEM_STARTUP=512M
    volumes:
      - ./unifi/config:/config
    ports:
      - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "8080:8080"
      - "1900:1900/udp"
      - "8843:8843"
      - "8880:8880"
      - "6789:6789"
      - "5514:5514/udp"
    restart: unless-stopped

  # FreeRADIUS para autenticação
  freeradius:
    image: freeradius/freeradius-server:latest
    container_name: freeradius
    volumes:
      - ./freeradius:/etc/raddb
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    restart: unless-stopped

  # Banco de dados PostgreSQL
  db:
    image: postgres:13-alpine
    container_name: hotspot-db
    environment:
      POSTGRES_DB: hotspot
      POSTGRES_USER: hotspot
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Aplicação Web (Frontend com Nginx)
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: hotspot-web
    ports:
      - "8088:80"
    depends_on:
      - api
    restart: unless-stopped

  # API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: hotspot-api
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    depends_on:
      - db
      - freeradius
    environment:
      - API_PORT=3000
      - DATABASE_URL=postgresql://hotspot:${DB_PASSWORD}@db:5432/hotspot
      - RADIUS_SECRET=${RADIUS_SECRET}
    restart: unless-stopped

volumes:
  postgres_data:
